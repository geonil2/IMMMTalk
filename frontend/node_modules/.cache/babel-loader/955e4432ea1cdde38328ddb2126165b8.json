{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { createLogger } from 'redux-logger';\nconst initialState = {};\nconst logger = createLogger();\nexport default configureStore({\n  reducer: reducers,\n  middleware: [logger, ...getDefaultMiddleware()],\n  devTools: process.env.NODE_ENV !== \"production\",\n  preloadedState: initialState // 만약 SSR로 넘어온 정보가 있다면 여기에 담아주면 됨.\n\n});","map":{"version":3,"names":["configureStore","createLogger","initialState","logger","reducer","reducers","middleware","getDefaultMiddleware","devTools","process","env","NODE_ENV","preloadedState"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/redux/store.ts"],"sourcesContent":["import {configureStore} from \"@reduxjs/toolkit\";\nimport { createLogger } from 'redux-logger';\n\nconst initialState = {};\n\nconst logger = createLogger()\n\nexport default configureStore({\n    reducer: reducers,\n    middleware: [logger, ...getDefaultMiddleware()],\n    devTools: process.env.NODE_ENV !== \"production\",\n    preloadedState: initialState, // 만약 SSR로 넘어온 정보가 있다면 여기에 담아주면 됨.\n})"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,MAAM,GAAGF,YAAY,EAA3B;AAEA,eAAeD,cAAc,CAAC;EAC1BI,OAAO,EAAEC,QADiB;EAE1BC,UAAU,EAAE,CAACH,MAAD,EAAS,GAAGI,oBAAoB,EAAhC,CAFc;EAG1BC,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAHT;EAI1BC,cAAc,EAAEV,YAJU,CAII;;AAJJ,CAAD,CAA7B"},"metadata":{},"sourceType":"module"}