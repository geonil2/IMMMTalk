{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppSelector } from \"../redux/store\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    path,\n    element\n  } = _ref;\n  const {\n    data\n  } = useAppSelector(state => state.authSlice);\n  const navigate = useNavigate(); // return\n\n  return data.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: element\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: navigate('/')\n  }, void 0, false);\n};\n\n_s(PrivateRoute, \"sQRFFNpBSTWCDKpYBoHmFyKNFSM=\", false, function () {\n  return [useAppSelector, useNavigate];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useNavigate","useAppSelector","PrivateRoute","path","element","data","state","authSlice","navigate","id"],"sources":["/Users/kimgeonil/Desktop/project/IMMMTalk/frontend/src/components/privateRoute.tsx"],"sourcesContent":["import React, {ReactElement} from 'react';\nimport Chats from \"../pages/chats\";\nimport {Route, useNavigate} from \"react-router-dom\";\nimport {useAppSelector} from \"../redux/store\";\n\nconst PrivateRoute = ({ path, element } : {path: string, element: React.ReactNode}) => {\n  const { data } = useAppSelector(state => state.authSlice);\n  const navigate = useNavigate();\n  // return\n  return data.id ?\n    <>{element}</>\n  : <>{navigate('/')}</>\n};\n\nexport default PrivateRoute;\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkC,OAAlC;AAEA,SAAeC,WAAf,QAAiC,kBAAjC;AACA,SAAQC,cAAR,QAA6B,gBAA7B;;;;AAEA,MAAMC,YAAY,GAAG,QAAkE;EAAA;;EAAA,IAAjE;IAAEC,IAAF;IAAQC;EAAR,CAAiE;EACrF,MAAM;IAAEC;EAAF,IAAWJ,cAAc,CAACK,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAA/B;EACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAFqF,CAGrF;;EACA,OAAOK,IAAI,CAACI,EAAL,gBACL;IAAA,UAAGL;EAAH,iBADK,gBAEL;IAAA,UAAGI,QAAQ,CAAC,GAAD;EAAX,iBAFF;AAGD,CAPD;;GAAMN,Y;UACaD,c,EACAD,W;;;KAFbE,Y;AASN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}