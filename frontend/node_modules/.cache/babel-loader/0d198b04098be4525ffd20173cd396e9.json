{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { DummyService } from \"../../services/dummyService\";\nconst initialState = {\n  isLoading: false,\n  error: '',\n  employer: {\n    id: '',\n    employee_name: '',\n    employee_salary: '',\n    employee_age: '',\n    profile_image: ''\n  }\n};\nexport const employerSlice = createSlice({\n  name: 'EMPLOYER',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(DummyService.getEmployer.pending, (state, action) => {\n      state.isLoading = true;\n      state.employer = initialState.employer;\n      state.error = '';\n    }).addCase(DummyService.getEmployer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.employer = action.payload;\n      state.error = '';\n    }).addCase(DummyService.getEmployer.rejected, (state, action) => {\n      state.isLoading = false;\n      state.employer = initialState.employer;\n      state.error = action.payload;\n    });\n  }\n});","map":{"version":3,"names":["createSlice","DummyService","initialState","isLoading","error","employer","id","employee_name","employee_salary","employee_age","profile_image","employerSlice","name","reducers","extraReducers","builder","addCase","getEmployer","pending","state","action","fulfilled","payload","rejected"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/redux/slices/employerSlice.ts"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport {DummyService} from \"../../services/dummyService\";\n\nexport interface Employer {\n    id: string,\n    employee_name: string,\n    employee_salary: string,\n    employee_age: string,\n    profile_image: string\n}\n\ntype EmployeeData = {\n    isLoading: boolean,\n    error: string | undefined,\n    employer: Employer\n}\n\nconst initialState: EmployeeData = {\n    isLoading: false,\n    error: '',\n    employer: {\n        id: '',\n        employee_name: '',\n        employee_salary: '',\n        employee_age: '',\n        profile_image: ''\n    }\n}\n\nexport const employerSlice = createSlice({\n    name: 'EMPLOYER',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(DummyService.getEmployer.pending, (state, action) => {\n                state.isLoading = true;\n                state.employer = initialState.employer;\n                state.error = '';\n            })\n            .addCase(DummyService.getEmployer.fulfilled, (state, action) => {\n                state.isLoading = false;\n                state.employer = action.payload;\n                state.error = '';\n            })\n            .addCase(DummyService.getEmployer.rejected, (state, action) => {\n                state.isLoading = false;\n                state.employer = initialState.employer;\n                state.error = action.payload as string;\n            })\n    }\n})"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAgBA,MAAMC,YAA0B,GAAG;EAC/BC,SAAS,EAAE,KADoB;EAE/BC,KAAK,EAAE,EAFwB;EAG/BC,QAAQ,EAAE;IACNC,EAAE,EAAE,EADE;IAENC,aAAa,EAAE,EAFT;IAGNC,eAAe,EAAE,EAHX;IAINC,YAAY,EAAE,EAJR;IAKNC,aAAa,EAAE;EALT;AAHqB,CAAnC;AAYA,OAAO,MAAMC,aAAa,GAAGX,WAAW,CAAC;EACrCY,IAAI,EAAE,UAD+B;EAErCV,YAFqC;EAGrCW,QAAQ,EAAE,EAH2B;EAIrCC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CACFC,OADL,CACaf,YAAY,CAACgB,WAAb,CAAyBC,OADtC,EAC+C,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1DD,KAAK,CAAChB,SAAN,GAAkB,IAAlB;MACAgB,KAAK,CAACd,QAAN,GAAiBH,YAAY,CAACG,QAA9B;MACAc,KAAK,CAACf,KAAN,GAAc,EAAd;IACH,CALL,EAMKY,OANL,CAMaf,YAAY,CAACgB,WAAb,CAAyBI,SANtC,EAMiD,CAACF,KAAD,EAAQC,MAAR,KAAmB;MAC5DD,KAAK,CAAChB,SAAN,GAAkB,KAAlB;MACAgB,KAAK,CAACd,QAAN,GAAiBe,MAAM,CAACE,OAAxB;MACAH,KAAK,CAACf,KAAN,GAAc,EAAd;IACH,CAVL,EAWKY,OAXL,CAWaf,YAAY,CAACgB,WAAb,CAAyBM,QAXtC,EAWgD,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MAC3DD,KAAK,CAAChB,SAAN,GAAkB,KAAlB;MACAgB,KAAK,CAACd,QAAN,GAAiBH,YAAY,CAACG,QAA9B;MACAc,KAAK,CAACf,KAAN,GAAcgB,MAAM,CAACE,OAArB;IACH,CAfL;EAgBH;AArBoC,CAAD,CAAjC"},"metadata":{},"sourceType":"module"}