{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { ChatsService } from \"../../services/chatsService\";\nconst initialState = {\n  loading: false,\n  error: '',\n  data: [{\n    id: 0,\n    title: '',\n    sender: 0,\n    receiver: 0,\n    lastMessage: '',\n    createdAt: '',\n    updatedAt: ''\n  }]\n};\nexport const chatsSlice = createSlice({\n  name: 'CHAHTS',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(ChatsService.getChats.pending, state => {\n      state.loading = true;\n      state.error = '';\n      state.data = initialState.data;\n    }).addCase(ChatsService.getChats.fulfilled, (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    }).addCase(ChatsService.getChats.rejected, (state, action) => {\n      state.loading = false;\n\n      if (action.payload) {\n        state.error = action.payload;\n      } else {\n        state.error = 'error';\n      }\n    });\n  }\n});","map":{"version":3,"names":["createSlice","ChatsService","initialState","loading","error","data","id","title","sender","receiver","lastMessage","createdAt","updatedAt","chatsSlice","name","reducers","extraReducers","builder","addCase","getChats","pending","state","fulfilled","action","payload","rejected"],"sources":["/Users/kimgeonil/Desktop/project/IMMMTalk/frontend/src/redux/slices/chatsSlice.ts"],"sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {ChatsService} from \"../../services/chatsService\";\nimport {AuthService} from \"../../services/authService\";\n\ntype chat = {\n    id: number,\n    title: string,\n    sender: number,\n    receiver: number,\n    lastMessage: null | string,\n    createdAt: string,\n    updatedAt: string\n}\n\nexport type chatsState = {\n  loading: boolean,\n  error: string | undefined,\n  data: chat[]\n};\n\nconst initialState: chatsState = {\n  loading: false,\n  error: '',\n  data: [{\n    id: 0,\n    title: '',\n    sender: 0,\n    receiver: 0,\n    lastMessage: '',\n    createdAt: '',\n    updatedAt: ''\n  }]\n}\n\nexport const chatsSlice = createSlice({\n  name: 'CHAHTS',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(ChatsService.getChats.pending, (state) => {\n        state.loading = true;\n        state.error = '';\n        state.data = initialState.data;\n      })\n      .addCase(ChatsService.getChats.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data = action.payload;\n      })\n      .addCase(ChatsService.getChats.rejected, (state, action) => {\n        state.loading = false;\n        if (action.payload) {\n          state.error = action.payload as string;\n        } else {\n          state.error = 'error'\n        }\n      })\n  }\n})\n"],"mappings":"AAAA,SAAQA,WAAR,QAAyC,kBAAzC;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAmBA,MAAMC,YAAwB,GAAG;EAC/BC,OAAO,EAAE,KADsB;EAE/BC,KAAK,EAAE,EAFwB;EAG/BC,IAAI,EAAE,CAAC;IACLC,EAAE,EAAE,CADC;IAELC,KAAK,EAAE,EAFF;IAGLC,MAAM,EAAE,CAHH;IAILC,QAAQ,EAAE,CAJL;IAKLC,WAAW,EAAE,EALR;IAMLC,SAAS,EAAE,EANN;IAOLC,SAAS,EAAE;EAPN,CAAD;AAHyB,CAAjC;AAcA,OAAO,MAAMC,UAAU,GAAGb,WAAW,CAAC;EACpCc,IAAI,EAAE,QAD8B;EAEpCZ,YAFoC;EAGpCa,QAAQ,EAAE,EAH0B;EAIpCC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CACJC,OADH,CACWjB,YAAY,CAACkB,QAAb,CAAsBC,OADjC,EAC2CC,KAAD,IAAW;MACjDA,KAAK,CAAClB,OAAN,GAAgB,IAAhB;MACAkB,KAAK,CAACjB,KAAN,GAAc,EAAd;MACAiB,KAAK,CAAChB,IAAN,GAAaH,YAAY,CAACG,IAA1B;IACD,CALH,EAMGa,OANH,CAMWjB,YAAY,CAACkB,QAAb,CAAsBG,SANjC,EAM4C,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC3DF,KAAK,CAAClB,OAAN,GAAgB,KAAhB;MACAkB,KAAK,CAAChB,IAAN,GAAakB,MAAM,CAACC,OAApB;IACD,CATH,EAUGN,OAVH,CAUWjB,YAAY,CAACkB,QAAb,CAAsBM,QAVjC,EAU2C,CAACJ,KAAD,EAAQE,MAAR,KAAmB;MAC1DF,KAAK,CAAClB,OAAN,GAAgB,KAAhB;;MACA,IAAIoB,MAAM,CAACC,OAAX,EAAoB;QAClBH,KAAK,CAACjB,KAAN,GAAcmB,MAAM,CAACC,OAArB;MACD,CAFD,MAEO;QACLH,KAAK,CAACjB,KAAN,GAAc,OAAd;MACD;IACF,CAjBH;EAkBD;AAvBmC,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}