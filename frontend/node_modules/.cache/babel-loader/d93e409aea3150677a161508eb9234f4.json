{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\nexport const AuthService = {\n  signIn: createAsyncThunk('AUTH/SIGNIN', async (arg, _ref) => {\n    let {\n      rejectWithValue\n    } = _ref;\n\n    try {\n      const {\n        userId,\n        password\n      } = arg;\n      const {\n        data\n      } = await API.post('/auth/signin', {\n        \"userId\": userId,\n        \"password\": password\n      });\n      return data;\n    } catch (error) {\n      console.log(error, '123123');\n\n      if (!error.response) {\n        console.log('에러 response 없음');\n        throw error;\n      }\n\n      console.log('에러 response 있음');\n      return rejectWithValue(error.response.data.message);\n    }\n  })\n}; // if (typeof error.response.data.message !== \"undefined\") {\n//     if (error.response.data.message.includes(\"expired\")) {\n//         store.dispatch(logout());\n//         throw error;\n//     }\n// }","map":{"version":3,"names":["createAsyncThunk","API","AuthService","signIn","arg","rejectWithValue","userId","password","data","post","error","console","log","response","message"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/services/authService.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport {API} from \"./api\";\n\nexport type UserData = {\n    userId: string,\n    password: string\n}\n\nexport const AuthService = {\n    signIn: createAsyncThunk(\n        'AUTH/SIGNIN',\n        async (arg: UserData, { rejectWithValue }) => {\n            try {\n                const { userId, password } = arg;\n                const { data } = await API.post('/auth/signin', {\n                    \"userId\": userId,\n                    \"password\": password\n                })\n                return data\n            } catch (error: any) {\n                console.log(error, '123123')\n                if(!error.response){\n                    console.log('에러 response 없음')\n                    throw error;\n                }\n                console.log('에러 response 있음')\n                return rejectWithValue(error.response.data.message);\n            }\n        }\n    )\n}\n\n// if (typeof error.response.data.message !== \"undefined\") {\n//     if (error.response.data.message.includes(\"expired\")) {\n//         store.dispatch(logout());\n//         throw error;\n//     }\n// }"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,SAAQC,GAAR,QAAkB,OAAlB;AAOA,OAAO,MAAMC,WAAW,GAAG;EACvBC,MAAM,EAAEH,gBAAgB,CACpB,aADoB,EAEpB,OAAOI,GAAP,WAA8C;IAAA,IAAxB;MAAEC;IAAF,CAAwB;;IAC1C,IAAI;MACA,MAAM;QAAEC,MAAF;QAAUC;MAAV,IAAuBH,GAA7B;MACA,MAAM;QAAEI;MAAF,IAAW,MAAMP,GAAG,CAACQ,IAAJ,CAAS,cAAT,EAAyB;QAC5C,UAAUH,MADkC;QAE5C,YAAYC;MAFgC,CAAzB,CAAvB;MAIA,OAAOC,IAAP;IACH,CAPD,CAOE,OAAOE,KAAP,EAAmB;MACjBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,QAAnB;;MACA,IAAG,CAACA,KAAK,CAACG,QAAV,EAAmB;QACfF,OAAO,CAACC,GAAR,CAAY,gBAAZ;QACA,MAAMF,KAAN;MACH;;MACDC,OAAO,CAACC,GAAR,CAAY,gBAAZ;MACA,OAAOP,eAAe,CAACK,KAAK,CAACG,QAAN,CAAeL,IAAf,CAAoBM,OAArB,CAAtB;IACH;EACJ,CAnBmB;AADD,CAApB,C,CAwBP;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}