{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const API = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: {\n    Accept: \"application/json\"\n  }\n});\nAPI.interceptors.response.use(res => {\n  return res;\n}, error => {\n  console.log(error);\n\n  if (error.response) {\n    return error.response;\n  }\n\n  return {\n    data: {\n      message: 'Failed SignIn'\n    }\n  };\n});\nexport const AuthService = {\n  signIn: createAsyncThunk('AUTH/signIn', async (arg, _ref) => {\n    let {\n      rejectWithValue\n    } = _ref;\n    // try {\n    const {\n      userId,\n      password\n    } = arg;\n    const {\n      data\n    } = await API.post('/authsignin', {\n      \"userId\": userId,\n      \"password\": password\n    });\n\n    if (data.message) {\n      return rejectWithValue(data.message);\n    }\n\n    return data; //     console.log(data)\n    //     return data;\n    // } catch (error) {\n    //     console.log(error, 'error')\n    // if (error instanceof AxiosError && error.response) {\n    //     return rejectWithValue(error.response.data.message);\n    // }\n    // throw error;\n    // }\n  })\n};","map":{"version":3,"names":["createAsyncThunk","axios","API","create","baseURL","headers","Accept","interceptors","response","use","res","error","console","log","data","message","AuthService","signIn","arg","rejectWithValue","userId","password","post"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/services/authService.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios, {AxiosError} from \"axios\";\n\nexport type UserData = {\n    userId: string,\n    password: string\n}\n\nexport const API = axios.create({\n    baseURL: 'http://localhost:8080',\n    headers: {\n        Accept: \"application/json\",\n    },\n});\n\nAPI.interceptors.response.use(\n    (res) => {\n        return res;\n    },\n    (error) => {\n        console.log(error)\n        if (error.response) {\n            return error.response;\n        }\n        return { data: { message: 'Failed SignIn' } }\n    }\n)\n\nexport const AuthService = {\n    signIn: createAsyncThunk(\n        'AUTH/signIn',\n        async (arg: UserData, { rejectWithValue }) => {\n            // try {\n                const { userId, password } = arg;\n                const { data } = await API.post('/authsignin', {\n                    \"userId\": userId,\n                    \"password\": password\n                })\n\n                if (data.message) {\n                    return rejectWithValue(data.message);\n                }\n                return data;\n            //     console.log(data)\n            //     return data;\n            // } catch (error) {\n            //     console.log(error, 'error')\n                // if (error instanceof AxiosError && error.response) {\n                //     return rejectWithValue(error.response.data.message);\n                // }\n                // throw error;\n            // }\n        }\n    )\n}"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAgC,OAAhC;AAOA,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC5BC,OAAO,EAAE,uBADmB;EAE5BC,OAAO,EAAE;IACLC,MAAM,EAAE;EADH;AAFmB,CAAb,CAAZ;AAOPJ,GAAG,CAACK,YAAJ,CAAiBC,QAAjB,CAA0BC,GAA1B,CACKC,GAAD,IAAS;EACL,OAAOA,GAAP;AACH,CAHL,EAIKC,KAAD,IAAW;EACPC,OAAO,CAACC,GAAR,CAAYF,KAAZ;;EACA,IAAIA,KAAK,CAACH,QAAV,EAAoB;IAChB,OAAOG,KAAK,CAACH,QAAb;EACH;;EACD,OAAO;IAAEM,IAAI,EAAE;MAAEC,OAAO,EAAE;IAAX;EAAR,CAAP;AACH,CAVL;AAaA,OAAO,MAAMC,WAAW,GAAG;EACvBC,MAAM,EAAEjB,gBAAgB,CACpB,aADoB,EAEpB,OAAOkB,GAAP,WAA8C;IAAA,IAAxB;MAAEC;IAAF,CAAwB;IAC1C;IACI,MAAM;MAAEC,MAAF;MAAUC;IAAV,IAAuBH,GAA7B;IACA,MAAM;MAAEJ;IAAF,IAAW,MAAMZ,GAAG,CAACoB,IAAJ,CAAS,aAAT,EAAwB;MAC3C,UAAUF,MADiC;MAE3C,YAAYC;IAF+B,CAAxB,CAAvB;;IAKA,IAAIP,IAAI,CAACC,OAAT,EAAkB;MACd,OAAOI,eAAe,CAACL,IAAI,CAACC,OAAN,CAAtB;IACH;;IACD,OAAOD,IAAP,CAXsC,CAY1C;IACA;IACA;IACA;IACI;IACA;IACA;IACA;IACJ;EACH,CAvBmB;AADD,CAApB"},"metadata":{},"sourceType":"module"}