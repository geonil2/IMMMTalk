{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios, { AxiosError } from \"axios\";\nexport const API = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: {\n    Accept: \"application/json\"\n  }\n});\nexport const AuthService = {\n  signIn: createAsyncThunk('AUTH/signIn', async (arg, _ref) => {\n    let {\n      rejectWithValue\n    } = _ref;\n\n    try {\n      const {\n        userId,\n        password\n      } = arg;\n      const {\n        data\n      } = await API.post('/auth/signin', {\n        \"userId\": userId,\n        \"password\": password\n      });\n      return data;\n    } catch (error) {\n      console.log(error);\n\n      if (error instanceof AxiosError && error.response) {\n        return rejectWithValue(error.response.data.message);\n      }\n\n      throw error;\n    }\n  })\n};","map":{"version":3,"names":["createAsyncThunk","axios","AxiosError","API","create","baseURL","headers","Accept","AuthService","signIn","arg","rejectWithValue","userId","password","data","post","error","console","log","response","message"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/services/authService.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios, {AxiosError} from \"axios\";\n\nexport type UserData = {\n    userId: string,\n    password: string\n}\n\nexport const API = axios.create({\n    baseURL: 'http://localhost:8080',\n    headers: {\n        Accept: \"application/json\",\n    },\n});\n\nexport const AuthService = {\n    signIn: createAsyncThunk(\n        'AUTH/signIn',\n        async (arg: UserData, { rejectWithValue }) => {\n            try {\n                const { userId, password } = arg;\n                const { data } = await API.post('/auth/signin', {\n                    \"userId\": userId,\n                    \"password\": password\n                })\n                return data;\n            } catch (error) {\n                console.log(error)\n                if (error instanceof AxiosError && error.response) {\n                    return rejectWithValue(error.response.data.message);\n                }\n                throw error;\n            }\n        }\n    )\n}"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AAOA,OAAO,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;EAC5BC,OAAO,EAAE,uBADmB;EAE5BC,OAAO,EAAE;IACLC,MAAM,EAAE;EADH;AAFmB,CAAb,CAAZ;AAOP,OAAO,MAAMC,WAAW,GAAG;EACvBC,MAAM,EAAET,gBAAgB,CACpB,aADoB,EAEpB,OAAOU,GAAP,WAA8C;IAAA,IAAxB;MAAEC;IAAF,CAAwB;;IAC1C,IAAI;MACA,MAAM;QAAEC,MAAF;QAAUC;MAAV,IAAuBH,GAA7B;MACA,MAAM;QAAEI;MAAF,IAAW,MAAMX,GAAG,CAACY,IAAJ,CAAS,cAAT,EAAyB;QAC5C,UAAUH,MADkC;QAE5C,YAAYC;MAFgC,CAAzB,CAAvB;MAIA,OAAOC,IAAP;IACH,CAPD,CAOE,OAAOE,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;;MACA,IAAIA,KAAK,YAAYd,UAAjB,IAA+Bc,KAAK,CAACG,QAAzC,EAAmD;QAC/C,OAAOR,eAAe,CAACK,KAAK,CAACG,QAAN,CAAeL,IAAf,CAAoBM,OAArB,CAAtB;MACH;;MACD,MAAMJ,KAAN;IACH;EACJ,CAjBmB;AADD,CAApB"},"metadata":{},"sourceType":"module"}