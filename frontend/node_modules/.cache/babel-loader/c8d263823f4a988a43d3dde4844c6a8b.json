{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { nowTheme, setTheme } from \"../../utils/util\";\nconst initialState = {\n  theme: 'light'\n};\nexport const themeSlice = createSlice({\n  name: 'THEME',\n  initialState,\n  reducers: {\n    getTheme(state) {\n      const theme = nowTheme();\n      state.theme = theme;\n    },\n\n    setTheme(state, action) {\n      setTheme(action.payload);\n      console.log(action.payload, 'bnbb');\n      state.theme = action.payload;\n    }\n\n  }\n});\nexport const {\n  getTheme\n} = themeSlice.actions;","map":{"version":3,"names":["createSlice","nowTheme","setTheme","initialState","theme","themeSlice","name","reducers","getTheme","state","action","payload","console","log","actions"],"sources":["/Users/kimgeonil/Desktop/project/IMMMTalk/frontend/src/redux/slices/themeSlice.ts"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport {nowTheme, setTheme} from \"../../utils/util\";\nimport {authSlice} from \"./signInSlice\";\n\nconst initialState = {\n  theme : 'light'\n};\n\nexport const themeSlice = createSlice({\n  name: 'THEME',\n  initialState,\n  reducers: {\n    getTheme(state) {\n      const theme = nowTheme();\n      state.theme = theme;\n    },\n    setTheme(state, action) {\n      setTheme(action.payload);\n      console.log(action.payload, 'bnbb')\n      state.theme = action.payload;\n    }\n  }\n})\n\nexport const { getTheme } = themeSlice.actions;\n"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,kBAAjC;AAGA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAG;AADW,CAArB;AAIA,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;EACpCM,IAAI,EAAE,OAD8B;EAEpCH,YAFoC;EAGpCI,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQ;MACd,MAAML,KAAK,GAAGH,QAAQ,EAAtB;MACAQ,KAAK,CAACL,KAAN,GAAcA,KAAd;IACD,CAJO;;IAKRF,QAAQ,CAACO,KAAD,EAAQC,MAAR,EAAgB;MACtBR,QAAQ,CAACQ,MAAM,CAACC,OAAR,CAAR;MACAC,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACC,OAAnB,EAA4B,MAA5B;MACAF,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACC,OAArB;IACD;;EATO;AAH0B,CAAD,CAA9B;AAgBP,OAAO,MAAM;EAAEH;AAAF,IAAeH,UAAU,CAACS,OAAhC"},"metadata":{},"sourceType":"module"}