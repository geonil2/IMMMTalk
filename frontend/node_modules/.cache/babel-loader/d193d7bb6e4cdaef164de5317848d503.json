{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { AuthService } from \"../../services/authService\";\nconst initialState = {\n  loading: false,\n  error: null,\n  data: {\n    id: 0,\n    userId: '',\n    password: '',\n    username: '',\n    description: '',\n    image: '',\n    url: '',\n    createdAt: '',\n    updatedAt: '',\n    token: ''\n  }\n};\nexport const fetchSignInSlice = createSlice({\n  name: 'signIn',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(AuthService.signIn.pending, (state, action) => {\n      state.loading = true;\n    }).addCase(AuthService.signIn.fulfilled, (state, action) => {\n      state.loading = false;\n      data = action.payload;\n    }).addCase(AuthService.signIn.rejected, (state, action) => {\n      console.log('rejected');\n    });\n  }\n}); // export const { setCounter } = fetchSignInSlice.actions;\n\nexport default fetchSignInSlice;","map":{"version":3,"names":["createSlice","AuthService","initialState","loading","error","data","id","userId","password","username","description","image","url","createdAt","updatedAt","token","fetchSignInSlice","name","reducers","extraReducers","builder","addCase","signIn","pending","state","action","fulfilled","payload","rejected","console","log"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/redux/slices/signInSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {AuthService} from \"../../services/authService\";\n\ntype FetchState = {\n    id: number,\n    userId: string,\n    password: string,\n    username: string,\n    description: string,\n    image: string,\n    url: string,\n    createdAt: string,\n    updatedAt: string,\n    token: string\n}\n\nexport type SignInState = {\n    loading: boolean,\n    error: string | null,\n    data: FetchState,\n}\n\nconst initialState: SignInState = {\n    loading: false,\n    error: null,\n    data: {\n        id: 0,\n        userId: '',\n        password: '',\n        username: '',\n        description: '',\n        image: '',\n        url: '',\n        createdAt: '',\n        updatedAt: '',\n        token: ''\n    }\n}\n\nexport const fetchSignInSlice = createSlice({\n    name: 'signIn',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n        .addCase(AuthService.signIn.pending, (state, action) => {\n            state.loading = true;\n        })\n        .addCase(AuthService.signIn.fulfilled, (state, action) => {\n            state.loading = false;\n            data = action.payload;\n        })\n        .addCase(AuthService.signIn.rejected, (state, action) => {\n            console.log('rejected');\n        })\n    }\n});\n\n// export const { setCounter } = fetchSignInSlice.actions;\n\nexport default fetchSignInSlice;"],"mappings":"AAAA,SAASA,WAAT,QAA0C,kBAA1C;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AAqBA,MAAMC,YAAyB,GAAG;EAC9BC,OAAO,EAAE,KADqB;EAE9BC,KAAK,EAAE,IAFuB;EAG9BC,IAAI,EAAE;IACFC,EAAE,EAAE,CADF;IAEFC,MAAM,EAAE,EAFN;IAGFC,QAAQ,EAAE,EAHR;IAIFC,QAAQ,EAAE,EAJR;IAKFC,WAAW,EAAE,EALX;IAMFC,KAAK,EAAE,EANL;IAOFC,GAAG,EAAE,EAPH;IAQFC,SAAS,EAAE,EART;IASFC,SAAS,EAAE,EATT;IAUFC,KAAK,EAAE;EAVL;AAHwB,CAAlC;AAiBA,OAAO,MAAMC,gBAAgB,GAAGhB,WAAW,CAAC;EACxCiB,IAAI,EAAE,QADkC;EAExCf,YAFwC;EAGxCgB,QAAQ,EAAE,EAH8B;EAIxCC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CACNC,OADD,CACSpB,WAAW,CAACqB,MAAZ,CAAmBC,OAD5B,EACqC,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACpDD,KAAK,CAACrB,OAAN,GAAgB,IAAhB;IACH,CAHD,EAICkB,OAJD,CAISpB,WAAW,CAACqB,MAAZ,CAAmBI,SAJ5B,EAIuC,CAACF,KAAD,EAAQC,MAAR,KAAmB;MACtDD,KAAK,CAACrB,OAAN,GAAgB,KAAhB;MACAE,IAAI,GAAGoB,MAAM,CAACE,OAAd;IACH,CAPD,EAQCN,OARD,CAQSpB,WAAW,CAACqB,MAAZ,CAAmBM,QAR5B,EAQsC,CAACJ,KAAD,EAAQC,MAAR,KAAmB;MACrDI,OAAO,CAACC,GAAR,CAAY,UAAZ;IACH,CAVD;EAWH;AAhBuC,CAAD,CAApC,C,CAmBP;;AAEA,eAAed,gBAAf"},"metadata":{},"sourceType":"module"}