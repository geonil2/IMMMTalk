{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { AuthService } from \"../../services/authService\";\nconst initialState = {\n  loading: false,\n  error: '',\n  data: {\n    id: 0,\n    email: '',\n    password: '',\n    username: '',\n    description: '',\n    image: '',\n    url: '',\n    createdAt: '',\n    updatedAt: '',\n    token: ''\n  }\n};\nexport const authSlice = createSlice({\n  name: 'AUTH',\n  initialState,\n  reducers: {\n    signOut(state) {\n      removeTokenInStorage();\n      state.loading = false;\n      state.error = '';\n      state.data = initialState.data;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(AuthService.signIn.pending, (state, action) => {\n      state.loading = true;\n      state.error = '';\n      state.data = initialState.data;\n    }).addCase(AuthService.signIn.fulfilled, (state, action) => {\n      state.loading = false;\n      setTokenInStorage(action.payload.token);\n      state.data = action.payload;\n    }).addCase(AuthService.signIn.rejected, (state, action) => {\n      state.loading = false;\n\n      if (action.payload) {\n        state.error = action.payload;\n      } else {\n        // state.error = action.error.message;\n        state.error = 'error';\n      }\n    }).addCase(AuthService.signUp.pending, state => {\n      state.loading = true;\n      state.error = '';\n      state.data = initialState.data;\n    }).addCase(AuthService.signUp.fulfilled, (state, action) => {\n      state.loading = false;\n      setTokenInStorage(action.payload.token);\n      state.data = action.payload;\n    }).addCase(AuthService.signUp.rejected, (state, action) => {\n      state.loading = false;\n\n      if (action.payload) {\n        state.error = action.payload;\n      } else {\n        state.error = 'error';\n      }\n    });\n  }\n});\nexport const {\n  signOut\n} = authSlice.actions;\n\nconst setTokenInStorage = token => {\n  window.localStorage.setItem('Token', token);\n};\n\nconst removeTokenInStorage = () => {\n  window.localStorage.removeItem('Token');\n};","map":{"version":3,"names":["createSlice","AuthService","initialState","loading","error","data","id","email","password","username","description","image","url","createdAt","updatedAt","token","authSlice","name","reducers","signOut","state","removeTokenInStorage","extraReducers","builder","addCase","signIn","pending","action","fulfilled","setTokenInStorage","payload","rejected","signUp","actions","window","localStorage","setItem","removeItem"],"sources":["/Users/kimgeonil/Desktop/project/IMMMTalk/frontend/src/redux/slices/signInSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {AuthService} from \"../../services/authService\";\n\ntype FetchState = {\n    id: number,\n    email: string,\n    password: string,\n    username: string,\n    description: string,\n    image: string,\n    url: string,\n    createdAt: string,\n    updatedAt: string,\n    token: string\n}\n\nexport type SignInState = {\n    loading: boolean,\n    error: string | undefined,\n    data: FetchState,\n}\n\nconst initialState: SignInState = {\n    loading: false,\n    error: '',\n    data: {\n        id: 0,\n        email: '',\n        password: '',\n        username: '',\n        description: '',\n        image: '',\n        url: '',\n        createdAt: '',\n        updatedAt: '',\n        token: ''\n    }\n}\n\nexport const authSlice = createSlice({\n    name: 'AUTH',\n    initialState,\n    reducers: {\n        signOut(state) {\n            removeTokenInStorage();\n            state.loading = false;\n            state.error = '';\n            state.data = initialState.data;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(AuthService.signIn.pending, (state, action) => {\n                state.loading = true;\n                state.error = '';\n                state.data = initialState.data;\n            })\n            .addCase(AuthService.signIn.fulfilled, (state, action) => {\n                state.loading = false;\n                setTokenInStorage(action.payload.token)\n                state.data = action.payload;\n            })\n            .addCase(AuthService.signIn.rejected, (state, action) => {\n                state.loading = false;\n                if (action.payload) {\n                    state.error = action.payload as string;\n                } else {\n                    // state.error = action.error.message;\n                    state.error = 'error'\n                }\n            })\n            .addCase(AuthService.signUp.pending, (state) => {\n                state.loading = true;\n                state.error = '';\n                state.data = initialState.data;\n            })\n            .addCase(AuthService.signUp.fulfilled, (state, action) => {\n                state.loading = false;\n                setTokenInStorage(action.payload.token)\n                state.data = action.payload;\n            })\n            .addCase(AuthService.signUp.rejected, (state, action) => {\n                state.loading = false;\n                if (action.payload) {\n                    state.error = action.payload as string;\n                } else {\n                    state.error = 'error'\n                }\n            })\n    }\n});\n\nexport const { signOut } = authSlice.actions;\n\nconst setTokenInStorage = (token: string) => {\n    window.localStorage.setItem('Token', token);\n}\n\nconst removeTokenInStorage = () => {\n    window.localStorage.removeItem('Token');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}