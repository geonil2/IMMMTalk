{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\nexport const AuthService = {\n  signIn: createAsyncThunk('auth/signIn', async (arg, thunkApi) => {\n    try {\n      const {\n        userId,\n        password\n      } = arg;\n      const {\n        data\n      } = await API.post('/auth/signin', {\n        \"userId\": userId,\n        \"password\": password\n      });\n      return data;\n    } catch (error) {\n      console.error(error, 'ererer');\n    }\n  })\n};","map":{"version":3,"names":["createAsyncThunk","API","AuthService","signIn","arg","thunkApi","userId","password","data","post","error","console"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/services/authService.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport {API} from \"./api\";\n\nexport type UserData = {\n    userId: string,\n    password: string\n}\n\nexport const AuthService = {\n    signIn: createAsyncThunk(\n        'auth/signIn',\n        async (arg: UserData, thunkApi) => {\n            try {\n                const { userId, password } = arg;\n                const { data } = await API.post('/auth/signin', {\n                    \"userId\": userId,\n                    \"password\": password\n                })\n                return data;\n            } catch (error) {\n                console.error(error, 'ererer')\n            }\n        }\n    )\n}"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,SAAQC,GAAR,QAAkB,OAAlB;AAOA,OAAO,MAAMC,WAAW,GAAG;EACvBC,MAAM,EAAEH,gBAAgB,CACpB,aADoB,EAEpB,OAAOI,GAAP,EAAsBC,QAAtB,KAAmC;IAC/B,IAAI;MACA,MAAM;QAAEC,MAAF;QAAUC;MAAV,IAAuBH,GAA7B;MACA,MAAM;QAAEI;MAAF,IAAW,MAAMP,GAAG,CAACQ,IAAJ,CAAS,cAAT,EAAyB;QAC5C,UAAUH,MADkC;QAE5C,YAAYC;MAFgC,CAAzB,CAAvB;MAIA,OAAOC,IAAP;IACH,CAPD,CAOE,OAAOE,KAAP,EAAc;MACZC,OAAO,CAACD,KAAR,CAAcA,KAAd,EAAqB,QAArB;IACH;EACJ,CAbmB;AADD,CAApB"},"metadata":{},"sourceType":"module"}