{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\nexport const AuthService = {\n  signIn: createAsyncThunk('AUTH/signIn', async (arg, _ref) => {\n    let {\n      rejectWithValue\n    } = _ref;\n\n    try {\n      const {\n        email,\n        password\n      } = arg;\n      const {\n        data\n      } = await API.post('/auth/signin', {\n        \"email\": email,\n        \"password\": password\n      });\n      return data;\n    } catch (error) {\n      return rejectWithValue(errorFunc(error));\n    }\n  }),\n  signUp: createAsyncThunk('AUTH/signUp', async (arg, _ref2) => {\n    let {\n      rejectWithValue\n    } = _ref2;\n\n    try {\n      // const { userId, password, pass } = arg;\n      const {\n        data\n      } = await API.post('/auth/signup', { ...arg\n      });\n      return data;\n    } catch (error) {\n      return rejectWithValue(errorFunc(error));\n    }\n  })\n};","map":{"version":3,"names":["createAsyncThunk","API","AuthService","signIn","arg","rejectWithValue","email","password","data","post","error","errorFunc","signUp"],"sources":["/Users/kimgeonil/Desktop/project/IMMMTalk/frontend/src/services/authService.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios, {AxiosError} from \"axios\";\nimport {API} from \"./api\";\n\nexport type loginData = {\n    email: string,\n    password: string\n}\n\nexport type signUpData = loginData & {\n    userName: string\n}\n\n\n\nexport const AuthService = {\n    signIn: createAsyncThunk(\n        'AUTH/signIn',\n        async (arg: loginData, { rejectWithValue }) => {\n            try {\n                const { email, password } = arg;\n                const { data } = await API.post('/auth/signin', {\n                    \"email\": email,\n                    \"password\": password\n                })\n                return data;\n            } catch (error) {\n                return rejectWithValue(errorFunc(error))\n            }\n        }\n    ),\n    signUp: createAsyncThunk(\n        'AUTH/signUp',\n        async (arg: signUpData, { rejectWithValue }) => {\n            try {\n                // const { userId, password, pass } = arg;\n                const { data } = await API.post('/auth/signup', { ...arg })\n                return data;\n            } catch (error) {\n                return rejectWithValue(errorFunc(error))\n            }\n        }\n    )\n}\n\n"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,SAAQC,GAAR,QAAkB,OAAlB;AAaA,OAAO,MAAMC,WAAW,GAAG;EACvBC,MAAM,EAAEH,gBAAgB,CACpB,aADoB,EAEpB,OAAOI,GAAP,WAA+C;IAAA,IAAxB;MAAEC;IAAF,CAAwB;;IAC3C,IAAI;MACA,MAAM;QAAEC,KAAF;QAASC;MAAT,IAAsBH,GAA5B;MACA,MAAM;QAAEI;MAAF,IAAW,MAAMP,GAAG,CAACQ,IAAJ,CAAS,cAAT,EAAyB;QAC5C,SAASH,KADmC;QAE5C,YAAYC;MAFgC,CAAzB,CAAvB;MAIA,OAAOC,IAAP;IACH,CAPD,CAOE,OAAOE,KAAP,EAAc;MACZ,OAAOL,eAAe,CAACM,SAAS,CAACD,KAAD,CAAV,CAAtB;IACH;EACJ,CAbmB,CADD;EAgBvBE,MAAM,EAAEZ,gBAAgB,CACpB,aADoB,EAEpB,OAAOI,GAAP,YAAgD;IAAA,IAAxB;MAAEC;IAAF,CAAwB;;IAC5C,IAAI;MACA;MACA,MAAM;QAAEG;MAAF,IAAW,MAAMP,GAAG,CAACQ,IAAJ,CAAS,cAAT,EAAyB,EAAE,GAAGL;MAAL,CAAzB,CAAvB;MACA,OAAOI,IAAP;IACH,CAJD,CAIE,OAAOE,KAAP,EAAc;MACZ,OAAOL,eAAe,CAACM,SAAS,CAACD,KAAD,CAAV,CAAtB;IACH;EACJ,CAVmB;AAhBD,CAApB"},"metadata":{},"sourceType":"module"}