{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const API = axios.create({\n  baseURL: 'https://dummy.restapiexample.com/api/v1',\n  headers: {\n    Accept: \"application/json\"\n  }\n});\n\nconst errorHandler = error => {\n  if (error.response.data.message) {\n    return error.response.data.message;\n  }\n\n  return error.response.data;\n};\n\nexport const DummyService = {\n  getEmployers: createAsyncThunk('dummy/GETEMPLOYEES', async (arg, _ref) => {\n    let {\n      rejectWithValue\n    } = _ref;\n\n    try {\n      const {\n        data\n      } = await API.get('/employees');\n      return data.data;\n    } catch (error) {\n      return rejectWithValue(errorHandler(error));\n    }\n  }),\n  getEmployer: createAsyncThunk('dummy/GETEMPLOYEE', async (arg, _ref2) => {\n    let {\n      rejectWithValue\n    } = _ref2;\n\n    try {\n      const {\n        id\n      } = arg;\n      const {\n        data\n      } = await API.get(`/employees/${id}`);\n      return data.data;\n    } catch (error) {\n      return;\n    }\n  })\n};","map":{"version":3,"names":["createAsyncThunk","axios","API","create","baseURL","headers","Accept","errorHandler","error","response","data","message","DummyService","getEmployers","arg","rejectWithValue","get","getEmployer","id"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/services/dummyService.ts"],"sourcesContent":["import {createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios, {AxiosError} from \"axios\";\n\nexport type employeeId = {\n    id: number,\n}\n\nexport const API = axios.create({\n    baseURL: 'https://dummy.restapiexample.com/api/v1',\n    headers: {\n        Accept: \"application/json\",\n    },\n});\n\nconst errorHandler = (error: any) => {\n    if (error.response.data.message) {\n        return error.response.data.message;\n    }\n    return error.response.data;\n}\n\n\nexport const DummyService = {\n    getEmployers: createAsyncThunk(\n        'dummy/GETEMPLOYEES',\n        async (arg, { rejectWithValue }) => {\n            try {\n                const { data } = await API.get('/employees');\n                return data.data;\n            } catch (error) {\n                return rejectWithValue(errorHandler(error))\n            }\n        }\n    ),\n    getEmployer: createAsyncThunk(\n        'dummy/GETEMPLOYEE',\n        async (arg: employeeId, { rejectWithValue }) => {\n            try {\n                const { id } = arg;\n                const { data } = await API.get(`/employees/${id}`);\n                return data.data;\n            } catch (error) {\n                return\n            }\n        }\n    )\n}"],"mappings":"AAAA,SAAQA,gBAAR,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAgC,OAAhC;AAMA,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC5BC,OAAO,EAAE,yCADmB;EAE5BC,OAAO,EAAE;IACLC,MAAM,EAAE;EADH;AAFmB,CAAb,CAAZ;;AAOP,MAAMC,YAAY,GAAIC,KAAD,IAAgB;EACjC,IAAIA,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAAxB,EAAiC;IAC7B,OAAOH,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBC,OAA3B;EACH;;EACD,OAAOH,KAAK,CAACC,QAAN,CAAeC,IAAtB;AACH,CALD;;AAQA,OAAO,MAAME,YAAY,GAAG;EACxBC,YAAY,EAAEb,gBAAgB,CAC1B,oBAD0B,EAE1B,OAAOc,GAAP,WAAoC;IAAA,IAAxB;MAAEC;IAAF,CAAwB;;IAChC,IAAI;MACA,MAAM;QAAEL;MAAF,IAAW,MAAMR,GAAG,CAACc,GAAJ,CAAQ,YAAR,CAAvB;MACA,OAAON,IAAI,CAACA,IAAZ;IACH,CAHD,CAGE,OAAOF,KAAP,EAAc;MACZ,OAAOO,eAAe,CAACR,YAAY,CAACC,KAAD,CAAb,CAAtB;IACH;EACJ,CATyB,CADN;EAYxBS,WAAW,EAAEjB,gBAAgB,CACzB,mBADyB,EAEzB,OAAOc,GAAP,YAAgD;IAAA,IAAxB;MAAEC;IAAF,CAAwB;;IAC5C,IAAI;MACA,MAAM;QAAEG;MAAF,IAASJ,GAAf;MACA,MAAM;QAAEJ;MAAF,IAAW,MAAMR,GAAG,CAACc,GAAJ,CAAS,cAAaE,EAAG,EAAzB,CAAvB;MACA,OAAOR,IAAI,CAACA,IAAZ;IACH,CAJD,CAIE,OAAOF,KAAP,EAAc;MACZ;IACH;EACJ,CAVwB;AAZL,CAArB"},"metadata":{},"sourceType":"module"}