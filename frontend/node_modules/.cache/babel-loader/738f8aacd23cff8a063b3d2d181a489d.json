{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const API = axios.create({\n  baseURL: 'https://dummy.restapiexample.com/api/v1',\n  headers: {\n    Accept: \"application/json\"\n  }\n});\nAPI.interceptors.response.use(res => {\n  return res;\n}, error => {\n  if (error.response.data.message) {\n    console.log(error, 'error');\n    return {\n      error: error.response.data.message\n    };\n  }\n\n  return {\n    error: error.response.data\n  };\n});\n\nconst errorHandler = error => {\n  if (error.response.data.message) {\n    console.log(error, 'error');\n    return error.response.data.message;\n  }\n\n  return error.response.data;\n};\n\nexport const DummyService = {\n  getEmployee: createAsyncThunk('dummy/GETEMPLOYEE', async (arg, _ref) => {\n    let {\n      rejectWithValue\n    } = _ref;\n\n    try {\n      const {\n        data\n      } = await API.get('/employee');\n      return data;\n    } catch (error) {\n      return rejectWithValue(error.response.data.message);\n    }\n  })\n};","map":{"version":3,"names":["createAsyncThunk","axios","API","create","baseURL","headers","Accept","interceptors","response","use","res","error","data","message","console","log","errorHandler","DummyService","getEmployee","arg","rejectWithValue","get"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/services/dummyService.ts"],"sourcesContent":["import {createAsyncThunk} from \"@reduxjs/toolkit\";\nimport axios, {AxiosError} from \"axios\";\n\nexport const API = axios.create({\n    baseURL: 'https://dummy.restapiexample.com/api/v1',\n    headers: {\n        Accept: \"application/json\",\n    },\n});\n\nAPI.interceptors.response.use(\n    (res) => {\n        return res;\n    },\n    (error) => {\n        if (error.response.data.message) {\n        console.log(error, 'error')\n            return { error: error.response.data.message };\n        }\n        return { error: error.response.data };\n    }\n)\nconst errorHandler = (error: AxiosError) => {\n    if (error.response.data.message) {\n        console.log(error, 'error')\n        return error.response.data.message;\n    }\n    return error.response.data;\n}\n\n\nexport const DummyService = {\n    getEmployee: createAsyncThunk(\n        'dummy/GETEMPLOYEE',\n        async (arg, { rejectWithValue }) => {\n            try {\n                const { data } = await API.get('/employee');\n                return data;\n            } catch (error) {\n                return rejectWithValue(error.response.data.message);\n            }\n        }\n    ),\n}"],"mappings":"AAAA,SAAQA,gBAAR,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAgC,OAAhC;AAEA,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC5BC,OAAO,EAAE,yCADmB;EAE5BC,OAAO,EAAE;IACLC,MAAM,EAAE;EADH;AAFmB,CAAb,CAAZ;AAOPJ,GAAG,CAACK,YAAJ,CAAiBC,QAAjB,CAA0BC,GAA1B,CACKC,GAAD,IAAS;EACL,OAAOA,GAAP;AACH,CAHL,EAIKC,KAAD,IAAW;EACP,IAAIA,KAAK,CAACH,QAAN,CAAeI,IAAf,CAAoBC,OAAxB,EAAiC;IACjCC,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmB,OAAnB;IACI,OAAO;MAAEA,KAAK,EAAEA,KAAK,CAACH,QAAN,CAAeI,IAAf,CAAoBC;IAA7B,CAAP;EACH;;EACD,OAAO;IAAEF,KAAK,EAAEA,KAAK,CAACH,QAAN,CAAeI;EAAxB,CAAP;AACH,CAVL;;AAYA,MAAMI,YAAY,GAAIL,KAAD,IAAuB;EACxC,IAAIA,KAAK,CAACH,QAAN,CAAeI,IAAf,CAAoBC,OAAxB,EAAiC;IAC7BC,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmB,OAAnB;IACA,OAAOA,KAAK,CAACH,QAAN,CAAeI,IAAf,CAAoBC,OAA3B;EACH;;EACD,OAAOF,KAAK,CAACH,QAAN,CAAeI,IAAtB;AACH,CAND;;AASA,OAAO,MAAMK,YAAY,GAAG;EACxBC,WAAW,EAAElB,gBAAgB,CACzB,mBADyB,EAEzB,OAAOmB,GAAP,WAAoC;IAAA,IAAxB;MAAEC;IAAF,CAAwB;;IAChC,IAAI;MACA,MAAM;QAAER;MAAF,IAAW,MAAMV,GAAG,CAACmB,GAAJ,CAAQ,WAAR,CAAvB;MACA,OAAOT,IAAP;IACH,CAHD,CAGE,OAAOD,KAAP,EAAc;MACZ,OAAOS,eAAe,CAACT,KAAK,CAACH,QAAN,CAAeI,IAAf,CAAoBC,OAArB,CAAtB;IACH;EACJ,CATwB;AADL,CAArB"},"metadata":{},"sourceType":"module"}