{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { API } from \"./api\";\nexport const AuthService = {\n  signIn: createAsyncThunk('AUTH/SIGNIN', async (arg, _ref) => {\n    let {\n      rejectWithValue\n    } = _ref;\n    // try {\n    const {\n      userId,\n      password\n    } = arg;\n    const res = await API.post('/auth/signin', {\n      \"userId\": userId,\n      \"password\": password\n    });\n    console.log(res, 'res');\n    return res.data ? res.data : res; // } catch (error: any) {\n    //     console.log(error, '123123')\n    //     if(!error.response){\n    //         console.log('에러 response 없음')\n    //         throw error;\n    //     }\n    //     console.log('에러 response 있음')\n    //     return rejectWithValue(error.response.data);\n    // }\n  })\n};","map":{"version":3,"names":["createAsyncThunk","API","AuthService","signIn","arg","rejectWithValue","userId","password","res","post","console","log","data"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/services/authService.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport {API} from \"./api\";\n\nexport type UserData = {\n    userId: string,\n    password: string\n}\n\nexport const AuthService = {\n    signIn: createAsyncThunk(\n        'AUTH/SIGNIN',\n        async (arg: UserData, { rejectWithValue }) => {\n            // try {\n                const { userId, password } = arg;\n                const res = await API.post('/auth/signin', {\n                    \"userId\": userId,\n                    \"password\": password\n                })\n                console.log(res, 'res')\n                return res.data ? res.data : res;\n            // } catch (error: any) {\n            //     console.log(error, '123123')\n            //     if(!error.response){\n            //         console.log('에러 response 없음')\n            //         throw error;\n            //     }\n            //     console.log('에러 response 있음')\n            //     return rejectWithValue(error.response.data);\n            // }\n        }\n    )\n}"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,SAAQC,GAAR,QAAkB,OAAlB;AAOA,OAAO,MAAMC,WAAW,GAAG;EACvBC,MAAM,EAAEH,gBAAgB,CACpB,aADoB,EAEpB,OAAOI,GAAP,WAA8C;IAAA,IAAxB;MAAEC;IAAF,CAAwB;IAC1C;IACI,MAAM;MAAEC,MAAF;MAAUC;IAAV,IAAuBH,GAA7B;IACA,MAAMI,GAAG,GAAG,MAAMP,GAAG,CAACQ,IAAJ,CAAS,cAAT,EAAyB;MACvC,UAAUH,MAD6B;MAEvC,YAAYC;IAF2B,CAAzB,CAAlB;IAIAG,OAAO,CAACC,GAAR,CAAYH,GAAZ,EAAiB,KAAjB;IACA,OAAOA,GAAG,CAACI,IAAJ,GAAWJ,GAAG,CAACI,IAAf,GAAsBJ,GAA7B,CARsC,CAS1C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACH,CApBmB;AADD,CAApB"},"metadata":{},"sourceType":"module"}