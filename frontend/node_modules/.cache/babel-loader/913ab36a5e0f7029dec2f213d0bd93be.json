{"ast":null,"code":"import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const API = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: {\n    Accept: \"application/json\"\n  }\n});\nAPI.interceptors.response.use(res => {\n  return res;\n}, error => {\n  if (error.response) {\n    return error.response.data.message;\n  }\n\n  return 'error';\n});\nexport const AuthService = {\n  signIn: createAsyncThunk('AUTH/signIn', async (arg, _ref) => {\n    let {\n      rejectWithValue\n    } = _ref;\n\n    try {\n      const {\n        userId,\n        password\n      } = arg;\n      const {\n        data\n      } = await API.post('/auth/signin', {\n        \"userId\": userId,\n        \"password\": password\n      });\n      console.log(data);\n      return data;\n    } catch (error) {\n      console.log(error, 'error'); // if (error instanceof AxiosError && error.response) {\n      //     return rejectWithValue(error.response.data.message);\n      // }\n      // throw error;\n    }\n  })\n};","map":{"version":3,"names":["createAsyncThunk","axios","API","create","baseURL","headers","Accept","interceptors","response","use","res","error","data","message","AuthService","signIn","arg","rejectWithValue","userId","password","post","console","log"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/services/authService.ts"],"sourcesContent":["import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios, {AxiosError} from \"axios\";\n\nexport type UserData = {\n    userId: string,\n    password: string\n}\n\nexport const API = axios.create({\n    baseURL: 'http://localhost:8080',\n    headers: {\n        Accept: \"application/json\",\n    },\n});\n\nAPI.interceptors.response.use(\n    (res) => {\n        return res;\n    },\n    (error) => {\n        if (error.response) {\n            return error.response.data.message;\n        }\n        return 'error';\n    }\n)\n\nexport const AuthService = {\n    signIn: createAsyncThunk(\n        'AUTH/signIn',\n        async (arg: UserData, { rejectWithValue }) => {\n            try {\n                const { userId, password } = arg;\n                const { data } = await API.post('/auth/signin', {\n                    \"userId\": userId,\n                    \"password\": password\n                })\n                console.log(data)\n                return data;\n            } catch (error) {\n                console.log(error, 'error')\n                // if (error instanceof AxiosError && error.response) {\n                //     return rejectWithValue(error.response.data.message);\n                // }\n                // throw error;\n            }\n        }\n    )\n}"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAgC,OAAhC;AAOA,OAAO,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC5BC,OAAO,EAAE,uBADmB;EAE5BC,OAAO,EAAE;IACLC,MAAM,EAAE;EADH;AAFmB,CAAb,CAAZ;AAOPJ,GAAG,CAACK,YAAJ,CAAiBC,QAAjB,CAA0BC,GAA1B,CACKC,GAAD,IAAS;EACL,OAAOA,GAAP;AACH,CAHL,EAIKC,KAAD,IAAW;EACP,IAAIA,KAAK,CAACH,QAAV,EAAoB;IAChB,OAAOG,KAAK,CAACH,QAAN,CAAeI,IAAf,CAAoBC,OAA3B;EACH;;EACD,OAAO,OAAP;AACH,CATL;AAYA,OAAO,MAAMC,WAAW,GAAG;EACvBC,MAAM,EAAEf,gBAAgB,CACpB,aADoB,EAEpB,OAAOgB,GAAP,WAA8C;IAAA,IAAxB;MAAEC;IAAF,CAAwB;;IAC1C,IAAI;MACA,MAAM;QAAEC,MAAF;QAAUC;MAAV,IAAuBH,GAA7B;MACA,MAAM;QAAEJ;MAAF,IAAW,MAAMV,GAAG,CAACkB,IAAJ,CAAS,cAAT,EAAyB;QAC5C,UAAUF,MADkC;QAE5C,YAAYC;MAFgC,CAAzB,CAAvB;MAIAE,OAAO,CAACC,GAAR,CAAYV,IAAZ;MACA,OAAOA,IAAP;IACH,CARD,CAQE,OAAOD,KAAP,EAAc;MACZU,OAAO,CAACC,GAAR,CAAYX,KAAZ,EAAmB,OAAnB,EADY,CAEZ;MACA;MACA;MACA;IACH;EACJ,CAlBmB;AADD,CAApB"},"metadata":{},"sourceType":"module"}