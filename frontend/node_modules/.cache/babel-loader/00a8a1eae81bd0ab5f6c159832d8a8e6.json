{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { DummyService } from \"../../services/dummyService\";\nconst initialState = {\n  isLoading: false,\n  error: '',\n  employers: [{\n    id: '',\n    employee_name: '',\n    employee_salary: '',\n    employee_age: '',\n    profile_image: ''\n  }]\n};\nexport const employeeSlice = createSlice({\n  name: 'EMPLOYEE',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(DummyService.getEmployee.pending, state => {\n      state.isLoading = true;\n      state.employer = initialState.employers;\n    }).addCase(DummyService.getEmployee.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.employers = action.payload;\n    }).addCase(DummyService.getEmployee.rejected, (state, action) => {\n      state.isLoading = false;\n      state.employers = initialState.employers;\n      state.error = action.payload;\n    });\n  }\n});","map":{"version":3,"names":["createSlice","DummyService","initialState","isLoading","error","employers","id","employee_name","employee_salary","employee_age","profile_image","employeeSlice","name","reducers","extraReducers","builder","addCase","getEmployee","pending","state","employer","fulfilled","action","payload","rejected"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/redux/slices/employeeSlice.ts"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\nimport {DummyService} from \"../../services/dummyService\";\n\ninterface Employer {\n    id: string,\n    employee_name: string,\n    employee_salary: string,\n    employee_age: string,\n    profile_image: string\n}\n\ntype EmployeeData = {\n    isLoading: boolean,\n    error: string | undefined,\n    employers: Employer[]\n}\n\nconst initialState: EmployeeData = {\n    isLoading: false,\n    error: '',\n    employers: [{\n        id: '',\n        employee_name: '',\n        employee_salary: '',\n        employee_age: '',\n        profile_image: ''\n    }],\n}\n\nexport const employeeSlice = createSlice({\n    name: 'EMPLOYEE',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(DummyService.getEmployee.pending, (state) => {\n                state.isLoading = true;\n                state.employer = initialState.employers;\n            })\n            .addCase(DummyService.getEmployee.fulfilled, (state, action) => {\n                state.isLoading = false;\n                state.employers = action.payload;\n            })\n            .addCase(DummyService.getEmployee.rejected, (state,action) => {\n                state.isLoading = false;\n                state.employers = initialState.employers;\n                state.error = action.payload as string;\n            })\n    }\n});"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAgBA,MAAMC,YAA0B,GAAG;EAC/BC,SAAS,EAAE,KADoB;EAE/BC,KAAK,EAAE,EAFwB;EAG/BC,SAAS,EAAE,CAAC;IACRC,EAAE,EAAE,EADI;IAERC,aAAa,EAAE,EAFP;IAGRC,eAAe,EAAE,EAHT;IAIRC,YAAY,EAAE,EAJN;IAKRC,aAAa,EAAE;EALP,CAAD;AAHoB,CAAnC;AAYA,OAAO,MAAMC,aAAa,GAAGX,WAAW,CAAC;EACrCY,IAAI,EAAE,UAD+B;EAErCV,YAFqC;EAGrCW,QAAQ,EAAE,EAH2B;EAIrCC,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CACFC,OADL,CACaf,YAAY,CAACgB,WAAb,CAAyBC,OADtC,EACgDC,KAAD,IAAW;MAClDA,KAAK,CAAChB,SAAN,GAAkB,IAAlB;MACAgB,KAAK,CAACC,QAAN,GAAiBlB,YAAY,CAACG,SAA9B;IACH,CAJL,EAKKW,OALL,CAKaf,YAAY,CAACgB,WAAb,CAAyBI,SALtC,EAKiD,CAACF,KAAD,EAAQG,MAAR,KAAmB;MAC5DH,KAAK,CAAChB,SAAN,GAAkB,KAAlB;MACAgB,KAAK,CAACd,SAAN,GAAkBiB,MAAM,CAACC,OAAzB;IACH,CARL,EASKP,OATL,CASaf,YAAY,CAACgB,WAAb,CAAyBO,QATtC,EASgD,CAACL,KAAD,EAAOG,MAAP,KAAkB;MAC1DH,KAAK,CAAChB,SAAN,GAAkB,KAAlB;MACAgB,KAAK,CAACd,SAAN,GAAkBH,YAAY,CAACG,SAA/B;MACAc,KAAK,CAACf,KAAN,GAAckB,MAAM,CAACC,OAArB;IACH,CAbL;EAcH;AAnBoC,CAAD,CAAjC"},"metadata":{},"sourceType":"module"}