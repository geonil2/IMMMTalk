{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { AuthService } from \"../../services/authService\";\nconst initialState = {\n  loading: false,\n  error: '',\n  data: {\n    id: 0,\n    userId: '',\n    password: '',\n    username: '',\n    description: '',\n    image: '',\n    url: '',\n    createdAt: '',\n    updatedAt: '',\n    token: ''\n  }\n};\nexport const authSlice = createSlice({\n  name: 'AUTH',\n  initialState,\n  reducers: {\n    signOut(state) {\n      state.loading = false;\n      state.error = '';\n      state.data = initialState.data;\n    }\n\n  },\n  extraReducers: builder => {\n    builder.addCase(AuthService.signIn.pending, (state, action) => {\n      state.loading = true;\n      state.error = '';\n      state.data = initialState.data;\n    }).addCase(AuthService.signIn.fulfilled, (state, action) => {\n      state.loading = false;\n      console.log(action.payload);\n      state.data = action.payload;\n    }).addCase(AuthService.signIn.rejected, (state, action) => {\n      state.loading = false;\n\n      if (action.payload) {\n        state.error = action.payload;\n      } else {\n        // state.error = action.error.message;\n        state.error = 'error';\n      }\n    });\n  }\n});\nexport const {\n  signOut\n} = authSlice.actions;\n\nconst setTokenInStorage = token => {\n  window.localStorage.setItem('token', token);\n};","map":{"version":3,"names":["createSlice","AuthService","initialState","loading","error","data","id","userId","password","username","description","image","url","createdAt","updatedAt","token","authSlice","name","reducers","signOut","state","extraReducers","builder","addCase","signIn","pending","action","fulfilled","console","log","payload","rejected","actions","setTokenInStorage","window","localStorage","setItem"],"sources":["/Users/kimgeonil/Desktop/project/redux-toolkit/src/redux/slices/signInSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {AuthService} from \"../../services/authService\";\n\ntype FetchState = {\n    id: number,\n    userId: string,\n    password: string,\n    username: string,\n    description: string,\n    image: string,\n    url: string,\n    createdAt: string,\n    updatedAt: string,\n    token: string\n}\n\nexport type SignInState = {\n    loading: boolean,\n    error: string | undefined,\n    data: FetchState,\n}\n\nconst initialState: SignInState = {\n    loading: false,\n    error: '',\n    data: {\n        id: 0,\n        userId: '',\n        password: '',\n        username: '',\n        description: '',\n        image: '',\n        url: '',\n        createdAt: '',\n        updatedAt: '',\n        token: ''\n    }\n}\n\nexport const authSlice = createSlice({\n    name: 'AUTH',\n    initialState,\n    reducers: {\n        signOut(state) {\n            state.loading = false;\n            state.error = '';\n            state.data = initialState.data;\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(AuthService.signIn.pending, (state, action) => {\n                state.loading = true;\n                state.error = '';\n                state.data = initialState.data;\n            })\n            .addCase(AuthService.signIn.fulfilled, (state, action) => {\n                state.loading = false;\n                console.log(action.payload)\n                state.data = action.payload;\n            })\n            .addCase(AuthService.signIn.rejected, (state, action) => {\n                state.loading = false;\n                if (action.payload) {\n                    state.error = action.payload as string;\n                } else {\n                    // state.error = action.error.message;\n                    state.error = 'error'\n                }\n            })\n    }\n});\n\nexport const { signOut } = authSlice.actions;\n\nconst setTokenInStorage = (token: string) => {\n    window.localStorage.setItem('token', token);\n}"],"mappings":"AAAA,SAASA,WAAT,QAA0C,kBAA1C;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AAqBA,MAAMC,YAAyB,GAAG;EAC9BC,OAAO,EAAE,KADqB;EAE9BC,KAAK,EAAE,EAFuB;EAG9BC,IAAI,EAAE;IACFC,EAAE,EAAE,CADF;IAEFC,MAAM,EAAE,EAFN;IAGFC,QAAQ,EAAE,EAHR;IAIFC,QAAQ,EAAE,EAJR;IAKFC,WAAW,EAAE,EALX;IAMFC,KAAK,EAAE,EANL;IAOFC,GAAG,EAAE,EAPH;IAQFC,SAAS,EAAE,EART;IASFC,SAAS,EAAE,EATT;IAUFC,KAAK,EAAE;EAVL;AAHwB,CAAlC;AAiBA,OAAO,MAAMC,SAAS,GAAGhB,WAAW,CAAC;EACjCiB,IAAI,EAAE,MAD2B;EAEjCf,YAFiC;EAGjCgB,QAAQ,EAAE;IACNC,OAAO,CAACC,KAAD,EAAQ;MACXA,KAAK,CAACjB,OAAN,GAAgB,KAAhB;MACAiB,KAAK,CAAChB,KAAN,GAAc,EAAd;MACAgB,KAAK,CAACf,IAAN,GAAaH,YAAY,CAACG,IAA1B;IACH;;EALK,CAHuB;EAUjCgB,aAAa,EAAGC,OAAD,IAAa;IACxBA,OAAO,CACFC,OADL,CACatB,WAAW,CAACuB,MAAZ,CAAmBC,OADhC,EACyC,CAACL,KAAD,EAAQM,MAAR,KAAmB;MACpDN,KAAK,CAACjB,OAAN,GAAgB,IAAhB;MACAiB,KAAK,CAAChB,KAAN,GAAc,EAAd;MACAgB,KAAK,CAACf,IAAN,GAAaH,YAAY,CAACG,IAA1B;IACH,CALL,EAMKkB,OANL,CAMatB,WAAW,CAACuB,MAAZ,CAAmBG,SANhC,EAM2C,CAACP,KAAD,EAAQM,MAAR,KAAmB;MACtDN,KAAK,CAACjB,OAAN,GAAgB,KAAhB;MACAyB,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;MACAV,KAAK,CAACf,IAAN,GAAaqB,MAAM,CAACI,OAApB;IACH,CAVL,EAWKP,OAXL,CAWatB,WAAW,CAACuB,MAAZ,CAAmBO,QAXhC,EAW0C,CAACX,KAAD,EAAQM,MAAR,KAAmB;MACrDN,KAAK,CAACjB,OAAN,GAAgB,KAAhB;;MACA,IAAIuB,MAAM,CAACI,OAAX,EAAoB;QAChBV,KAAK,CAAChB,KAAN,GAAcsB,MAAM,CAACI,OAArB;MACH,CAFD,MAEO;QACH;QACAV,KAAK,CAAChB,KAAN,GAAc,OAAd;MACH;IACJ,CAnBL;EAoBH;AA/BgC,CAAD,CAA7B;AAkCP,OAAO,MAAM;EAAEe;AAAF,IAAcH,SAAS,CAACgB,OAA9B;;AAEP,MAAMC,iBAAiB,GAAIlB,KAAD,IAAmB;EACzCmB,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCrB,KAArC;AACH,CAFD"},"metadata":{},"sourceType":"module"}